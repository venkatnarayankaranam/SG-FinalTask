name: CI/CD Pipeline

permissions:
  issues: write
  contents: read
  
on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: PYTHONPATH=. pytest

  security_scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t my-python-app .

      - name: Run Trivy Vulnerability Scan
        run: trivy image my-python-app

  staging:
    needs: security_scan
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t my-python-app .

      - name: Save image to tar
        run: docker save my-python-app -o my-python-app.tar

      - name: Copy Docker image to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "my-python-app.tar"
          target: "~/app"

      - name: Deploy to Azure VM via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop my-python-app || true
            docker rm my-python-app || true
            docker rmi my-python-app || true
            docker load -i ~/app/my-python-app.tar
            docker run -d -p 80:80 --name my-python-app my-python-app
            docker logs my-python-app

  production:
    needs: staging
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: pallavibandreddy

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t my-python-app .

      - name: Save image to tar
        run: docker save my-python-app -o my-python-app.tar

      - name: Copy Docker image to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "my-python-app.tar"
          target: "~/app"

      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop my-python-app || true
            docker rm my-python-app || true
            docker rmi my-python-app || true
            docker load -i ~/app/my-python-app.tar
            docker run -d -p 80:80 --name my-python-app my-python-app
            docker logs my-python-app
